---
# tasks file for ansile-role-sonatype-nexus-oss
- name: Load a variable file based on the OS type
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - '{{ansible_os_family}}.yaml'
      paths:
        - 'vars'

- name: Configure Harderning OS
  include_tasks: commons/sysctl.yaml

- name: Create user & group
  include_tasks: commons/users.yaml

- name: Install dependencies for installing
  package:
    name: "{{ item }}"
    state: present
  loop:
    - zip
    - unzip
    - tar
    - curl
    - wget
  
- name: Install packages
  block:
  - name: Download opensearch
    ansible.builtin.get_url:
      url: "{{ opensearch_download_url }}"
      dest: "/tmp/opensearch.{{ os_package }}"
    when: opensearch_download

  - name: Check file has been downloaded!
    ansible.builtin.stat:
      path: "/tmp/opensearch.{{ os_package }}"
    register: bin_files

  - name: Install opensearch from file for RedHat
    environment:
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: "{{ default_admin_password | default('Admin/4u@2024') }}"
    ansible.builtin.yum:
      name: /tmp/opensearch.{{ os_package }}
      disable_gpg_check: true
      state: present
    when: 
    - bin_files.stat.exists
    - ansible_os_family == 'RedHat'

  - name: Install opensearch from file for Debian
    environment:
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: "{{ default_admin_password | default('Admin/4u@2024') }}"
    ansible.builtin.apt:
      deb: /tmp/opensearch.{{ os_package }}
    when: 
    - bin_files.stat.exists
    - ansible_os_family == 'Debian'

- name: Make sure a service unit is running
  ansible.builtin.systemd_service:
    state: started
    daemon_reload: true
    enabled: true
    name: 'opensearch'

- name: Configure rule iptables & selinux
  block:
  - name: Gathering service facts.
    service_facts:
    register: services_state

  - name: Put SELinux in permissive mode
    ansible.posix.selinux:
      policy: targeted
      state: permissive
    when: ansible_os_family == 'RedHat'

  - name: Setup firewall-cmd for RedHat family
    ansible.posix.firewalld:
      port: "{{ item }}/{{ opensearch_default_proto }}"
      zone: public
      permanent: yes
      immediate: true
      state: enabled
    loop:
      - "{{ opensearch_ui_port }}"
      - "{{ opensearch_rest_port }}"
      - "{{ opensearch_cross_cluster }}"
      - "{{ opensearch_node_communication }}"
      - "{{ opensearch_analyzer }}"
    when: 
    - ansible_os_family == 'RedHat'
    - services_state.ansible_facts.services["firewalld.service"] is defined
    - services_state.ansible_facts.services["firewalld.service"].state == 'running'
  
  - name: Setup ufw for Debian family
    community.general.ufw:
      state: enabled
      port: "{{ item }}"
      proto: "{{ opensearch_default_proto }}"
      policy: allow
    loop:
      - "{{ opensearch_ui_port }}"
      - "{{ opensearch_rest_port }}"
      - "{{ opensearch_cross_cluster }}"
      - "{{ opensearch_node_communication }}"
      - "{{ opensearch_analyzer }}"
    when: 
    - ansible_os_family == 'Debian'
    - services_state.ansible_facts.services["firewalld.service"] is defined
    - services_state.ansible_facts.services["firewalld.service"].state == 'running'
